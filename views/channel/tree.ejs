<script type="text/javascript" src="http://mbostock.github.com/d3/d3.js?1.27.2"></script>
<script type="text/javascript" src="http://mbostock.github.com/d3/d3.layout.js?1.27.2"></script>

<style>
.link {
  fill: none;
  stroke: #ccc;
  stroke-width: 4.5px;
}
</style>
 
    <div id="viz"></div>


    <script type="text/javascript">


      // var treeData = {"name" : "A", "children" : [
      //   {"name" : "A1" },
      //   {"name" : "A2" },
      //   {"name" : "A3", "children": [
      //   {"name" : "A31", "children" :[
      //   {"name" : "A311" },
      //   {"name" : "A312" }
      //   ]}] }
      // ]};

      var treeData2 = <%- JSON.stringify(treeJSON) %>;

      var treeData = { "name": "Root",
                       "children" : [ { "name": "peer1",
                                        "children" : [ 
                                                      { "name": "peer6",
                                                        "children" : [ ]
                                                      } 
                                                     ] 
                                      },
                                      { "name": "peer2",
                                        "children" : [ 
                                                      { "name": "peer3",
                                                        "children" : [ ]
                                                      }
                                                      ,
                                                      { "name": "peer4",
                                                        "children" : [ ]
                                                      },
                                                      { "name": "peer5",
                                                        "children" : [ ]
                                                      }       
                                                     ]
                                      } 
                                    ]
      }
      
      

// // Transfer the object to a JSON string
// var jsonstr = JSON.stringify(treeJSON);

// // HERE you do the transform
// var new_jsonstr = jsonstr.replace('"connections"', '"children"');

// // You probably want to parse the altered string later
// var new_obj = JSON.parse(new_jsonstr);


      var vis = d3.select("#viz").append("svg:svg")
.attr("width", 400)
.attr("height", 300)
.append("svg:g")
.attr("transform", "translate(40, 0)");

      var tree = d3.layout.tree()
.size([300,150]);

      var diagonal = d3.svg.diagonal()
.projection(function(d) { return [d.y, d.x]; });

      var nodes = tree.nodes(treeData2);
      var link = vis.selectAll("pathlink")
.data(tree.links(nodes))
.enter().append("svg:path")
.attr("class", "link")
.attr("d", diagonal);

      var node = vis.selectAll("g.node")
.data(nodes)
.enter().append("svg:g")
.attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; })

      node.append("svg:circle")
.attr("r", 4.5);

      node.append("svg:text")
.attr("dx", function(d) { return d.children ? -8 : 8; })
.attr("dy", 3)
.attr("text-anchor", function(d) { return d.children ? "end" : "start"; })
.text(function(d) { return d.name; });

    </script>
</div>
</center>
